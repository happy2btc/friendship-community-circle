/**
 * Comments Table
 * Stores comments related to discussion topics.
 */

-- migrate:up
create table public.comments (
  id bigint generated by default as identity primary key,
  created_at timestamp with time zone not null default now(),
  content text not null,
  
  -- Foreign key to the user who wrote the comment
  author_id uuid not null references auth.users(id) on delete cascade,
  
  -- Foreign key to the parent discussion
  discussion_id uuid not null references public.discussions(id) on delete cascade
);

comment on table public.comments is 'Stores user comments on discussion topics.';

-- Enable Row Level Security
alter table public.comments enable row level security;

-- Policies for Comments
-- 1. Anyone can view all comments.
create policy "Comments are viewable by everyone"
on public.comments for select
using ( true );

-- 2. Authenticated users can create comments.
create policy "Users can create comments"
on public.comments for insert
to authenticated with check ( author_id = auth.uid() );

-- 3. Users can update their own comments.
create policy "Users can update their own comments"
on public.comments for update
using ( author_id = auth.uid() );

-- 4. Users can delete their own comments.
create policy "Users can delete their own comments"
on public.comments for delete
using ( author_id = auth.uid() );

-- migrate:down
drop table if exists public.comments;